echo "Trybe" > futuro.txt --- cria o arquivo futuro.txt com a palavra Trybe dentro
cat arquivo.txt --- lista o conteúdo do arquivo.txt
cat > arquivo.txt --- cria uma arquivo.txt e deixa inserir dados / substitui dados já existentes
cat >> arquivo.txt --- acrescenta dados a um arquivo.txt já existente
cat arquivo1.txt arquivo2.txt > arquivo3.txt -- junta os dados dos dois primeiros no terceiro arquivo

sort < arquivo.txt --- apenas mostra os dados ordenados por ordem alfabética
sort < arquivo.txt > arquivo2.txt --- ordena os dados e cria um novo arquivo com eles

who -- mostra os usuários do sistema
who | sort --- mostra usuários e ordena-os com sort
who | wc -l --- puxa os usuários e envia para o wc -l para contar quantos são

grep F nomes.txt | sort --- pega as palavras que contém a letra "F" e ordena com o pipe 

ls -l --- mostra uma série de outras infos (tipos de acessos, usuário, grupo, tamanho, dia, diretorio)
_______________________________________________________________________
**tipos de acesso**
r --- leitura permitida
w --- write escrita
x --- acessar aquele arquivo pelo comando cd
hífen --- no início da sequencia indica um arquivo comum
D --- no inicio significa diretorio
(-rw-r--r--)
- = arquivo comum
rw- = usuário atual (leitura,escrita,não executável (caso tivesse x seria executável)
r-- = grupo (leitura)
r-- = outros usuário que não fazem parte do mesmo grupo (leitura)
_______________________________________________________________________
**alterar autorização de acesso**
chmod u --- alterar apenas para o usuário atual
chmod g --- alterar para o grupo de usários
chmod o --- outros usuários
chmod a --- alterar para todo mundo o acesso

chmod u- --- retira permissão
chmod u+ --- acrescenta permissão
chmod u= --- mantém

chmod u-rw arquivo.txt --- retira autorização de leitura e escrita do arquivo
chmod u+rw aqquivo.txt --- acrescenta autorização de leitura e escrita
_______________________________________________________________________
** manipular processos e jobs**

ps --- mostra os processos atuais
sleep 5 --- para o terminal durante 5 segundos
sleep 100 & --- cria um processo por 100 segundos em background
ctrl z --- suspende o processo

bg --- coloca em background
fg % 1 --- coloca em execução em primeiro plano o processo 1
jobs --- mostra processos em execução ou background
kill % 1 --- finaliza o processo 1
kill "numero pid, ex: 7657" --- mata o processo tbm
kill -9 "numero pid" --- mata a força o processo
killall "nome do processo"
________

history | tail -n 42 --- mostra ultimos 42 processos executados

find .-name "*.js" -print --- usado para encontrar todos os arquivos com a extensão .js dentro do diretório scripts e seus subdiretórios
_______________________________________________________________________
# Para listar todos os arquivos que terminam em .txt
find . -name "*.txt"

# Para localizar apenas diretórios ou arquivos

# Localizar tanto arquivos quanto diretórios
find ./teste -name exemplo*
# Resultado
./teste/exemplo.txt
./teste/exemplo

# Localizar somente arquivos
find ./teste -type f -name "exemplo*"
# Resultado
./teste/exemplo.txt

# Localizar somente diretórios
find ./teste -type d -name "exemplo*"
# Resultado
./teste/exemplo

O `history` é um comando que mostra o histórico de comandos que você executou no terminal. A quantidade ou o tamanho desse _"histórico"_ podem ser configurados para um número arbitrário de comandos ou para ver todo o histórico.

# Mostra o histórico de comandos
history
# Pegar os últimos 10 comandos
history | tail

O `echo` é um comando utilizado em scripts ou no terminal para exibir mensagens na tela ou em um arquivo.

echo "Este é um teste"
# Result
Este é um teste

# Pode ser usado para colocar textos dentro de arquivos.
echo "Este é mais um teste" > teste.txt
cat teste.txt
Este é mais um teste

________________________________________________________________________
Exercícios parte 1 
1 --- cd unix_tests
2 --- cat > skills2.txt --- enter --> "Internet,Unix,Bash"
3 --- cat >> skills2.txt --- enter --> "item1,item2,item3,item4,item5"
4 --- wc -l skills2.txt
5 --- head -3 skills2.txt | sort | cat > top_skills.txt
6 --- cat > phrases2.txt ---enter--> "frases"
7 --- grep br phrases2.txt | wc -l
8 --- grep -iv br phrases2.txt | wc -l
9 --- cat >> phrases2.txt --enter-> digitar nome de dois paises ao final
10 --- cat phrases2.txt countries.txt > bunch_of_things.txt
11 --- sort bunch_of_things.txt

Alternativa --- 
sort bunch_of_things.txt | cat > var.txt
rm bunch_of_things.txt
cat var.txt > bunch_of_things.txt
rm var.txt
________________________________________________________________________
Exercícios parte 2
1 --- cd unix_tests
2 --- ls -l
3 --- chmod a+rw bunch_of_things.txt  ---> ls -l
4 --- chmod a-w bunch_of_things.txt ---> ls -l
5 --- chmod 644 bunch_of_things.txt ---> ls -l
    
rwx = 111 ( 7 | Acesso Total )
r-- = 100 ( 4 | Somente Leitura )
-w- = 010 ( 2 | Somente Escrita )
--x = 001 ( 1 | Somente Execução )
rw- = 110 ( 6 | Somente Leitura e Escrita )
r-x = 101 ( 5 | Somente Leitura e Execução )
-wx = 011 ( 3 | Somente Escrita e Execução )
--- = 000 ( 0 | Todos Acessos Negados )
________________________________________________________________________
Exercícios parte3
1 --- ls -l
2 --- sleep 30 & ---> cria um processo por 30 segundos em background
3 --- ps --> kill -9 19462
4 --- sleep 30 -> ctrl+z --> bg
5 --- sleep 300 &
6 --- sleep 200 -> ctrl+z -> sleep 100 -> ctrl+z
7 --- jobs --> kill % 1 (ps -> kill -9 "PID")
8 --- bg
9 --- ps --> kill -9 "PID"
________________________________________________________________________
Bônus
1 --- cmatrix
2 --- fortune > fortune.txt (sudo apt-get install fortune)
3 --- wc -w fortune.txt
4 --- sl (apt install sl)
5 --- cat fortune.txt | cowsay (sudo apt-get install cowsay)
6 --- factor 42 --> 2 3 7 ---> Descobre os números primos de 42
7 --- fortune | rev
8 --- telnet towel.blinkenlights.nl
_________________________________________________________________________
-- Recapitulando --

ls --> lista arquivos e diretórios
mkdir --> Cria um novo diretório
cd --> Entra na pasta desejada ou volta
pwd --> Mostra o caminho atual
cp --> Copia um arquivo 
mv --> move ou renomeia arquivo ou diretório
rm --> Deleta arquivo
rmdir --> Deleta diretório
clear --> Limpa a tela
cat --> Lê um arquivo ou escreve um arquivo
less --> Mostra um arquivo página po página
head --> Mostra as 10 primeiras linhas de um arquivo
tail --> Mostra as 10 ultimas linhas
grep --> Encontra a palavra desejada no arquivo
wc --> Conta caracteres,palavras e linhas de um arquivo -- -c -w -l
> --> Pode ser usado após o cat para adicionar informações
>> --> Insere mais informações no final
| --> Link para o próximo comando
sort --> Ordena os dados por ordem alfabetica ou numerica
who --> Mostra usuários do sistema
man --> Manual do comando desejado
whatis --> Mostra o que faz um comando
apropos --> Mostra informações sobre um assunto
* --> Mostra tudo que for *.alguma coisa
? --> Substitui um caractere que vc não sabe
chmod --> Altera direitos de um arquivo
ps --> Mostra os processos
bg --> Altera um processo para background
kill --> Mata um processo
find --> Localiza arquivos e diretórios EX:find . -name "*.txt"
history --> Mostra ultimos comandos efetuados --> history 42
